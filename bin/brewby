#!/usr/bin/env ruby
$: << File.join(File.dirname(__FILE__), '..', 'lib')
require 'bundler/setup'
require 'thor'
require 'brewby'
require 'json'
require 'pry'

module Brewby
  class CLI < Thor
    desc "start RECIPE", "start Brewby"
    method_option :config, default: '~/.brewbyrc', aliases: '-c', desc: 'Brewby configuration file'
    method_option :adapter, default: 'raspberry_pi', desc: 'Brewby IO adapters to use'
    method_option :recipe, desc: 'Brewby recipe file to load'
    def start recipe
      Signal.trap(:INT) do
        puts "Shutting down"
        exit
      end

      if File.exists? File.expand_path(options[:config])
        config = JSON.parse File.read(File.expand_path(options[:config])), symbolize_names: true
      else
        config = {
          adapter: options[:adapter].to_sym,
          inputs: [{}],
          outputs: [{
            pin: 17,
            pulse_range: 5000
          }]
        }
      end

      application = Brewby::Application.new config
      application.load_recipe recipe

      Shoes.app width: 640, height: 480 do
        $app = self

        flow do
          title "Brewby"
          @quit = button "QUIT"
          @quit.click do
            exit
          end
        end

        stack do
          subtitle application.name
          @start = button "START"
          @start.click do
            @started = true
            application.start_timer
            application.ready = true
          end
        end

        animate do
          if @started
            application.tick
          end
        end
      end
    end
  end
end

Brewby::CLI.start
